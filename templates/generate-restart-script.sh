#!/bin/bash
# Genesis v1.1.0 - Generate project-specific restart script
# Usage: ./generate-restart-script.sh [project-name] [project-type]

set -e  # Exit on error

PROJECT_NAME=$1
PROJECT_TYPE=$2  # 'SaaS Application' or 'Landing Page'

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check parameters
if [ -z "$PROJECT_NAME" ] || [ -z "$PROJECT_TYPE" ]; then
  echo -e "${YELLOW}Usage: ./generate-restart-script.sh [project-name] [project-type]${NC}"
  echo ""
  echo "Example:"
  echo "  ./generate-restart-script.sh my-saas-app \"SaaS Application\""
  echo "  ./generate-restart-script.sh my-landing \"Landing Page\""
  echo ""
  echo "Project Types:"
  echo "  - \"SaaS Application\" (for genesis-saas-app projects)"
  echo "  - \"Landing Page\" (for genesis-landing-page projects)"
  exit 1
fi

PROJECT_PATH=~/projects/$PROJECT_NAME

# Check if project directory exists
if [ ! -d "$PROJECT_PATH" ]; then
  echo -e "${YELLOW}Warning: Project directory does not exist: $PROJECT_PATH${NC}"
  echo "Creating directory..."
  mkdir -p "$PROJECT_PATH"
fi

# Determine skill type based on project type
if [[ "$PROJECT_TYPE" == *"SaaS"* ]] || [[ "$PROJECT_TYPE" == *"saas"* ]]; then
  SKILL_TYPE="genesis-saas-app"
  PROJECT_TYPE_DISPLAY="SaaS Application"
elif [[ "$PROJECT_TYPE" == *"Landing"* ]] || [[ "$PROJECT_TYPE" == *"landing"* ]]; then
  SKILL_TYPE="genesis-landing-page"
  PROJECT_TYPE_DISPLAY="Landing Page"
else
  echo -e "${YELLOW}Unknown project type. Defaulting to SaaS Application.${NC}"
  SKILL_TYPE="genesis-saas-app"
  PROJECT_TYPE_DISPLAY="SaaS Application"
fi

echo -e "${BLUE}==================================${NC}"
echo -e "${BLUE}Genesis Restart Script Generator${NC}"
echo -e "${BLUE}==================================${NC}"
echo ""
echo -e "Project Name: ${GREEN}$PROJECT_NAME${NC}"
echo -e "Project Type: ${GREEN}$PROJECT_TYPE_DISPLAY${NC}"
echo -e "Project Path: ${GREEN}$PROJECT_PATH${NC}"
echo -e "Genesis Skill: ${GREEN}$SKILL_TYPE${NC}"
echo ""

# Generate restart-project.sh script
cat > "$PROJECT_PATH/restart-project.sh" << EOF
#!/bin/bash
# $PROJECT_NAME Terminal Restart Script
# Generated by Genesis v1.1.0

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "\${BLUE}================================\${NC}"
echo -e "\${BLUE}Terminal Restart Guide\${NC}"
echo -e "\${BLUE}================================\${NC}"
echo ""
echo -e "Project: \${GREEN}$PROJECT_NAME\${NC}"
echo -e "Type: \${GREEN}$PROJECT_TYPE_DISPLAY\${NC}"
echo ""

# Check current directory
CURRENT_DIR=\$(pwd)
EXPECTED_DIR="$PROJECT_PATH"

if [ "\$CURRENT_DIR" != "\$EXPECTED_DIR" ]; then
  echo -e "\${YELLOW}Warning: Not in project directory\${NC}"
  echo -e "Current: \$CURRENT_DIR"
  echo -e "Expected: \$EXPECTED_DIR"
  echo ""
  echo "Run: cd $PROJECT_PATH"
  exit 1
fi

echo -e "\${BLUE}[1/2] Checking Git Status...\${NC}"
echo ""
git status
echo ""

echo -e "\${BLUE}[2/2] Current Branch:\${NC}"
git branch --show-current
echo ""

echo -e "\${GREEN}================================\${NC}"
echo -e "\${GREEN}Setup Instructions\${NC}"
echo -e "\${GREEN}================================\${NC}"
echo ""

echo -e "\${BLUE}TAB 1 (WSL - System Commands)\${NC}"
echo -e "  Status: \${GREEN}✓ Ready\${NC}"
echo ""
echo -e "  Available commands:"
echo -e "    \${YELLOW}npm run dev\${NC}     - Start development server"
echo -e "    \${YELLOW}npm install\${NC}     - Install dependencies"
echo -e "    \${YELLOW}git status\${NC}      - Check git status"
echo -e "    \${YELLOW}git add .\${NC}       - Stage changes"
echo -e "    \${YELLOW}git commit\${NC}      - Commit changes"
echo ""

echo -e "\${BLUE}TAB 2 (Claude Code - AI Development)\${NC}"
echo ""
echo -e "  Setup steps:"
echo -e "    1. \${YELLOW}cd ~/projects/$PROJECT_NAME\${NC}"
echo -e "    2. \${YELLOW}claude init\${NC}"
echo -e "    3. Paste the context recovery prompt below:"
echo ""
echo -e "\${BLUE}────────────────────────────────────────────────────────\${NC}"
cat << 'PROMPT'
Reload Genesis context for $PROJECT_NAME.

This is a $PROJECT_TYPE_DISPLAY project using Genesis patterns.

Please:
1. Review .github/CLAUDE_CODE_REMINDER.md
2. Review GENESIS_QUICK_START.md
3. Review PROJECT_STATUS.md
4. Invoke genesis-core skill
5. Invoke $SKILL_TYPE skill
6. Resume from current position in PROJECT_STATUS.md

Ready to continue development.
PROMPT
echo -e "\${BLUE}────────────────────────────────────────────────────────\${NC}"
echo ""

echo -e "\${GREEN}================================\${NC}"
echo -e "\${GREEN}Quick Reference\${NC}"
echo -e "\${GREEN}================================\${NC}"
echo ""
echo -e "📁 Project Structure:"
echo -e "  • GENESIS_QUICK_START.md  - Project overview & recovery"
echo -e "  • PROJECT_STATUS.md       - Current state & progress"
echo -e "  • .github/CLAUDE_CODE_REMINDER.md - Auto context reminder"
echo ""
echo -e "🔧 Development:"
echo -e "  • Tab 1: System commands (git, npm, etc.)"
echo -e "  • Tab 2: Claude Code (AI development)"
echo ""
echo -e "⚡ Next Steps:"
echo -e "  1. Start dev server in Tab 1: \${YELLOW}npm run dev\${NC}"
echo -e "  2. Initialize Claude Code in Tab 2: \${YELLOW}claude init\${NC}"
echo -e "  3. Paste recovery prompt in Tab 2"
echo ""
echo -e "\${GREEN}✓ Restart guide complete!\${NC}"
echo ""
EOF

# Make the script executable
chmod +x "$PROJECT_PATH/restart-project.sh"

echo -e "${GREEN}================================${NC}"
echo -e "${GREEN}Script Generated Successfully!${NC}"
echo -e "${GREEN}================================${NC}"
echo ""
echo -e "Created: ${BLUE}$PROJECT_PATH/restart-project.sh${NC}"
echo ""
echo -e "${YELLOW}Usage:${NC}"
echo "  cd $PROJECT_PATH"
echo "  ./restart-project.sh"
echo ""
echo -e "${YELLOW}Or as one-liner:${NC}"
echo "  cd $PROJECT_PATH && ./restart-project.sh"
echo ""
echo -e "${GREEN}✓ Ready for PC reboot workflow!${NC}"
echo ""
